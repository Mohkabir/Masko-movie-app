{"version":3,"sources":["Components/Search.js","images/unsplash1.jpg","images/loading.svg","Components/CurrentMovie.js","Components/Dashbord.js","Components/Main.js","App.js","index.js"],"names":["Search","handleSubmit","useState","movieType","setMovieType","movieTitle","setMovieTitle","movieYear","setMovieYear","handleChange","e","target","name","value","className","required","type","placeholder","onChange","onClick","CurrentMovie","currentMovie","handleNominated","nominated","displaynumber","maxError","btnStatus","src","Poster","unsplash1","alt","Title","Year","Genre","Plot","loading","Dashbord","selected","dashbordNo","handleRemove","topFiveSelected","slice","map","movie","index","imdbID","Main","setCurrentMovie","setSelected","setNominated","setdisplaynumber","setDashbordNo","apiResponse","setApiResponse","nav","setNav","a","axios","get","res","data","fetchMovies","useEffect","legnth","navToggle","filter","fil","to","exact","path","component","props","Fragment","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c717eae7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Search({handleSubmit}) {\r\n  \r\n  const [movieType, setMovieType] = useState(\"\");\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n  const [movieYear, setMovieYear] = useState(\"\");\r\n\r\n  const handleChange = (e)=>{\r\n    if(e.target.name === \"movieType\"){\r\n      setMovieType(e.target.value);\r\n    }else if(e.target.name === \"movieTitle\"){\r\n      setMovieTitle(e.target.value);\r\n    }else if(e.target.name === \"movieYear\"){\r\n      setMovieYear(e.target.value);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"form-group input-text\">\r\n        <input \r\n          required \r\n          className=\"form-control\" \r\n          type=\"text\" \r\n          placeholder=\"search title ...\" \r\n          onChange={handleChange} \r\n          name=\"movieTitle\" \r\n          value={movieTitle}\r\n        />\r\n        <input \r\n        required\r\n          type=\"number\" \r\n          className=\"form-control\" \r\n          placeholder=\"movie year...\" \r\n          onChange={handleChange} \r\n          name=\"movieYear\" \r\n          value={movieYear}\r\n        />  \r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select \r\n          className=\"form-control\" \r\n          name=\"movieType\" \r\n          onChange={handleChange}\r\n          value={movieType}>\r\n          <option>Select type</option>\r\n          <option value=\"movie\">movie</option>  \r\n          <option value=\"series\">series</option>\r\n          <option value=\"episode\">episode</option>\r\n        </select>\r\n      </div>\r\n      <input \r\n       onClick={()=>handleSubmit(movieType,movieTitle,movieYear)}\r\n       className=\"form-control btn btn-primary\" type=\"submit\" \r\n       value=\"Search\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","export default __webpack_public_path__ + \"static/media/unsplash1.0ea2b427.jpg\";","export default __webpack_public_path__ + \"static/media/loading.447d904b.svg\";","import React from 'react'\r\nimport unsplash1 from \"../images/unsplash1.jpg\";\r\nimport loading from \"../images/loading.svg\";\r\n\r\nfunction CurrentMovie({currentMovie, handleNominated,nominated,displaynumber,maxError}) {\r\n\r\n  let btnStatus = nominated?\"btn-success\":\"btn-primary\";\r\n\r\n  if(displaynumber === 0){\r\n    return <div className=\"alert alert-info card\">\r\n      <p>welcome to Masko award show</p>\r\n      <p>please nominate maximum of 5 movies</p>\r\n    </div>\r\n  }else if(displaynumber === 1){\r\n    return(\r\n      <div className=\"movieDisplay\">\r\n        <div className=\"img-container\">\r\n          <img className=\"imgPoster\" \r\n           src={currentMovie? currentMovie.Poster:unsplash1} \r\n           alt=\" poster not available\"/>\r\n        </div>\r\n        <div className=\"movieInfo-container\">\r\n          <p className=\"title\">\r\n            <span>Title:</span> \r\n            {currentMovie? currentMovie.Title:null}\r\n            {currentMovie? currentMovie.Year:null}\r\n          </p>\r\n          <p>\r\n            <span>Genre:</span>\r\n            {currentMovie? currentMovie.Genre:null}\r\n          </p>\r\n          <p className=\"plot\">\r\n            <span>Plot:</span>\r\n            {currentMovie? currentMovie.Plot:null}\r\n          </p>\r\n          <button \r\n            className={`btn ${btnStatus} btn-block`} \r\n            onClick={handleNominated}>\r\n            {nominated?\"Nominated search another movie.\":\"Nominate\"}\r\n          </button>\r\n          <p className=\"aler alert-danger\">\r\n            {maxError?\"Maximum nominated\":\"\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }else if(displaynumber === 3){\r\n    return <div className=\"alert alert-info card\">no result search for a movie</div>\r\n  }else if(displaynumber === 4){\r\n    return <div className=\"alert alert-danger card\">error</div>\r\n  }else if(displaynumber === 5){\r\n    return <div className=\"card loading\"><img className=\"loading\" src={loading} alt=\"loading..\"/></div>\r\n  }\r\n}\r\n\r\nexport default CurrentMovie","import React, { useState } from 'react';\r\nimport unsplash1 from \"../images/unsplash1.jpg\";\r\n\r\nfunction Dashbord({selected, dashbordNo, handleRemove}) {\r\n\r\n  let topFiveSelected = selected.slice(0, 5);\r\n\r\n  if(dashbordNo === 0){\r\n    return(\r\n      <div className=\"card alert alert-warning\">\r\n        <p>please go to the home page to nominate 5 movies</p>\r\n      </div>\r\n    )\r\n  }else if(dashbordNo === 1){\r\n      return (\r\n        topFiveSelected.map((movie, index) =>(\r\n          <div key={index} className=\"movieDisplay\">\r\n            <div className=\"img-container\">\r\n                <img className=\"imgPoster\" src={movie.Poster ==\"\"?null:movie.Poster} alt=\" poster not available\"/>\r\n            </div>\r\n            <div className=\"movieInfo-container\">\r\n              <p className=\"title\">\r\n                <span>Title:</span>\r\n                {movie? movie.Title:null}\r\n                {movie? movie.Year:null}\r\n                </p>\r\n              <p>\r\n                <span>Genre:</span>\r\n                {movie? movie.Genre:null}\r\n              </p>\r\n              <p className=\"plot\">\r\n                <span>Plot:</span>\r\n                {movie? movie.Plot:null}\r\n              </p>\r\n              {\r\n                movie == \"\"?\"\":\"\"}\r\n                {movie.Title?(\r\n                  <button \r\n                  value={index}\r\n                  onClick={()=>handleRemove(movie.imdbID)}\r\n                  className=\"btn btn-block btn-danger\">remove from nomination\r\n                  </button>\r\n                ):\"\"\r\n              } \r\n            </div>  \r\n          </div>\r\n      ))\r\n      )\r\n  }else if(dashbordNo === 2){\r\n    return(\r\n      <div className=\"card alert alert-warning\">\r\n         <p>page to nominate 5 movies</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashbord\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Search from './Search';\r\nimport CurrentMovie from './CurrentMovie';\r\nimport Dashbord from './Dashbord';\r\n\r\nfunction Main() {\r\n  const [movieType, setMovieType] = useState(\"\");\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n  const [movieYear, setMovieYear] = useState(\"\");\r\n  const [currentMovie, setCurrentMovie] = useState();\r\n  const [selected, setSelected] = useState([]);\r\n  const [nominated, setNominated] = useState(false)\r\n  const [displaynumber, setdisplaynumber] = useState(0)\r\n  const [dashbordNo, setDashbordNo] = useState(0);\r\n  const [maxError, setMaxError] = useState(false);\r\n  const [apiResponse, setApiResponse] = useState(false);\r\n  const [nav, setNav] = useState(false);\r\n\r\n  let key = \"e9ee2678\";\r\n\r\n  // handle input submit and make api call with the inputed values\r\n  const handleSubmit = (movieType,movieTitle,movieYear)=>{\r\n    setMovieTitle(movieTitle);\r\n    setMovieType(movieType);\r\n    setMovieYear(movieYear);\r\n    setApiResponse(true);\r\n    setNominated(false);\r\n\r\n    const fetchMovies = async ()=> {\r\n      setdisplaynumber(5)\r\n      \r\n      const res = await axios.get(`http://www.omdbapi.com/?apikey=${key}&t=${movieTitle}&y=${movieYear}&type=${movieType}`)\r\n\r\n      setCurrentMovie(res.data);\r\n\r\n      if(res){\r\n        setdisplaynumber(1)\r\n      }else{\r\n        setdisplaynumber(4)\r\n      }\r\n\r\n    }\r\n\r\n    if(!movieType || !movieTitle || !movieYear){\r\n      setdisplaynumber(4);\r\n    }else{\r\n      fetchMovies();\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n  }, [apiResponse])\r\n\r\n  // hadlenomination button \r\n  const handleNominated = ()=>{\r\n\r\n    setNominated(true);\r\n    setDashbordNo(1);\r\n    setSelected([...selected,selected.legnth> 5?\"\":currentMovie])\r\n  }\r\n\r\n  const handleNav = ()=>{\r\n    setNav(!nav);\r\n  }\r\n\r\n  // navigation toggle\r\n  const navToggle= nav?\"display\":null;\r\n\r\n  // delete function\r\n  const handleRemove = (imdbID)=>{\r\n    setSelected([...selected.filter( fil => fil.imdbID !== imdbID)]); \r\n\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"Main\">\r\n        <div className=\"header\">\r\n          <h1>Masko Movie Award Nomination</h1>\r\n          <p>Nominate your favourite movies </p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <i className=\"fa fa-bars\" onClick={handleNav}></i>\r\n          <nav>\r\n            <ul className={`nav navbar-nav ${navToggle}`}>\r\n              <li>\r\n                <Link to=\"/Masko-movie-app/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/dashbord\">Dashbord</Link>\r\n              </li>\r\n            </ul>  \r\n          </nav>\r\n          \r\n          <Route \r\n          exact \r\n          path=\"/Masko-movie-app\" \r\n          component={props=>(\r\n            <React.Fragment>\r\n              < Search \r\n              handleSubmit={handleSubmit} \r\n              />\r\n              < CurrentMovie \r\n              currentMovie={currentMovie} \r\n              handleNominated={handleNominated}\r\n              nominated={nominated}\r\n              displaynumber={displaynumber}\r\n              maxError = {maxError}\r\n              />\r\n            </React.Fragment>\r\n          )} />\r\n          <Route path=\"/dashbord\" component={(props)=>(\r\n            <React.Fragment>\r\n              < Dashbord\r\n              selected={selected}\r\n              dashbordNo={dashbordNo}\r\n              handleRemove={handleRemove}\r\n              />\r\n            </React.Fragment>\r\n          )}/>\r\n       </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Main","import React from \"react\";\nimport Main from \"./Components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./style.scss\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}